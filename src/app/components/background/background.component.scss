.background {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  object-fit: cover;

  mask-image: radial-gradient(white 0%, white 30%, transparent 80%, transparent);
}

.circle-container {
  $particleNum: 200;
  $particleColor: hsl(180, 100%, 80%);

  position: absolute;
  transform: translateY(-10vh);
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  .circle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    mix-blend-mode: screen;
    background-image: radial-gradient(hsl(180, 100%, 80%), hsl(180, 100%, 80%) 10%, hsla(180, 100%, 80%, 0) 56%);
    animation: fade-frames 200ms infinite, scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(0.4, 0.4, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(0.4, 0.4, 1);
      }
    }
  }

  $particleBaseSize: 8;

  @for $i from 1 through $particleNum {
      &:nth-child(#{$i}) {
        $circleSize: random($particleBaseSize);
        width: $circleSize + px;
        height: $circleSize + px;
    
        $startPositionY: 97vh;
        $framesName: "move-frames-" + $i;
        $moveDuration: 28000 + random(9000) + ms;
    
        animation-name: #{$framesName};
        animation-duration: $moveDuration;
        animation-delay: random(37000) + ms;
    
        @keyframes #{$framesName} {
          from {
            transform: translate3d(calc(#{random(80)}vw), $startPositionY, 0); // Keep X-axis within viewport width
          }
    
          to {
            transform: translate3d(calc(#{random(80)}vw), -$startPositionY - random(30), 0); // Keep X-axis within viewport width
          }
        }
    
        .circle {
          animation-delay: random(2000) + ms;
        }
      }
    }
}

